{"version":3,"sources":["components/register.js","store.js","components/login.js","components/todos.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","message","e","setState","defineProperty","target","name","value","_this2","preventDefault","source","axios","CancelToken","userData","post","API_ROOT","cancelToken","token","then","response","console","log","status","history","push","catch","error","isCancel","cancel","react_default","a","createElement","style","textAlign","Helmet","className","onSubmit","handleFormSubmit","bind","noValidate","autoComplete","Card_default","width","fontSize","CardHeader_default","title","CardContent_default","Typography_default","component","TextField_default","id","label","type","onChange","handleChange","margin","CardActions_default","Button_default","variant","color","react_router_dom","to","Component","token$","BehaviorSubject","window","localStorage","getItem","updateToken","newToken","setItem","removeItem","next","Login","data","Todos","newtodo","todolist","subscription","subscribe","decoded","jwt","decode","get","headers","Authorization","todos","reverse","unsubscribe","_this3","content","componentDidMount","_this4","delete","_this5","AppBar_default","Toolbar_default","IconButton_default","aria-label","onClick","handleLogout","marginBottom","map","todo","Fragment","key","Chip_default","justifyContent","onDelete","handleDeleteTodo","App","basename","process","react_router","exact","path","login","register","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0gBAaqBA,cAEnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,QAAS,IALMV,4EAmBNW,GACXR,KAAKS,SAALX,OAAAY,EAAA,EAAAZ,CAAA,GAAiBU,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,iDAI3BL,GAAG,IAAAM,EAAAd,KAClBQ,EAAEO,iBAEFf,KAAKgB,OAASC,IAAMC,YAAYF,SAEhC,IAAMG,EAAW,CACfd,MAAOL,KAAKI,MAAMC,MAClBC,SAAUN,KAAKI,MAAME,UAKvBW,IAAMG,KAAKC,wEAAwBF,EAAU,CAAEG,YAAatB,KAAKgB,OAAOO,QACrEC,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACY,MAApBA,EAASG,SACXd,EAAKlB,MAAMiC,QAAQC,KAAK,aACxBhB,EAAKL,SAAS,CACZF,QAAS,0DACTF,MAAO,GACPC,SAAU,QAIfyB,MAAM,SAACC,GACDf,IAAMgB,SAASD,IAClBlB,EAAKL,SAAS,CAAEF,QAAS,+EAO3BP,KAAKgB,QACPhB,KAAKgB,OAAOkB,0CAMd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,WACvBJ,EAAAC,EAAAC,cAACG,EAAA,OAAD,KACEL,EAAAC,EAAAC,cAAA,0BACOF,EAAAC,EAAAC,cAAA,WAETF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,QAAMK,SAAU1C,KAAK2C,iBAAiBC,KAAK5C,MAAO6C,YAAU,EAACC,aAAa,OACxEX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAME,MAAO,CAAEU,MAAO,UACpBb,EAAAC,EAAAC,cAAA,KAAGI,UAAU,4BAA4BH,MAAO,CAAEW,SAAU,UAA5D,kBACAd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAYe,MAAM,YAClBhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWzC,KAAKI,MAAMG,SADvC,IAEE4B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,UAAU,KACpBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,GAAG,uBACHC,MAAM,QAAQnB,MAAO,CAAEU,MAAO,KAC9BU,KAAK,QACL9C,KAAK,QACLC,MAAOb,KAAKI,MAAMC,MAClBsD,SAAU3D,KAAK4D,aAAahB,KAAK5C,QAPrC,IAQKmC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAWE,MAAO,CAAEU,MAAO,IAAKa,OAAQ,GACtCL,GAAG,uBACHC,MAAM,WACNC,KAAK,WACL9C,KAAK,WACLC,MAAOb,KAAKI,MAAME,SAClBqD,SAAU3D,KAAK4D,aAAahB,KAAK5C,QAfrC,IAgBKmC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAEEF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAaK,UAAU,iBACrBN,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQE,MAAO,CAAEU,MAAO,QAAUU,KAAK,SAASM,QAAQ,YAAYC,MAAM,WAA1E,aAEF9B,EAAAC,EAAAC,cAAA,qCAA4BF,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ4B,QAAQ,WAAWC,MAAM,WAAU9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,GAAG,KAAT,sBArG/CC,aCPzBC,EAAS,WAAIC,GAAgBC,OAAOC,aAAaC,QAAQ,UACpE,MAEK,SAASC,EAAYC,GACrBA,EAGHJ,OAAOC,aAAaI,QAAQ,QAASD,GAFrCJ,OAAOC,aAAaK,WAAW,SAKjCR,EAAOS,KAAKH,OCFOI,cAEnB,SAAAA,EAAYnF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACjBlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,QAAS,IALMV,4EAUNW,GACXR,KAAKS,SAALX,OAAAY,EAAA,EAAAZ,CAAA,GAAiBU,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,iDAI3BL,GAAG,IAAAM,EAAAd,KAClBQ,EAAEO,iBAEFf,KAAKgB,OAASC,IAAMC,YAAYF,SAEhC,IAAMG,EAAW,CACfd,MAAOL,KAAKI,MAAMC,MAClBC,SAAUN,KAAKI,MAAME,UAKvBW,IAAMG,KAAKC,oEAAoBF,EAAU,CAAEG,YAAatB,KAAKgB,OAAOO,QACjEC,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACY,MAApBA,EAASG,SACX8C,EAAYjD,EAASuD,KAAKzD,OAC1BgD,OAAOC,aAAaI,QAAQ,QAASnD,EAASuD,KAAKzD,OACnDT,EAAKlB,MAAMiC,QAAQC,KAAK,aAI3BC,MAAM,SAACC,GACDf,IAAMgB,SAASD,IAClBlB,EAAKL,SAAS,CAAEF,QAAS,+EAQ3BP,KAAKgB,QACPhB,KAAKgB,OAAOkB,0CAMd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,WAEvBJ,EAAAC,EAAAC,cAACG,EAAA,OAAD,KACEL,EAAAC,EAAAC,cAAA,uBACOF,EAAAC,EAAAC,cAAA,WAETF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,QAAMK,SAAU1C,KAAK2C,iBAAiBC,KAAK5C,MAAO6C,YAAU,EAACC,aAAa,OACxEX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAME,MAAO,CAAEU,MAAO,UACpBb,EAAAC,EAAAC,cAAA,KAAGI,UAAU,4BAA4BH,MAAO,CAAEW,SAAU,UAA5D,kBACAd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAYe,MAAM,YAClBhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWzC,KAAKI,MAAMG,SADvC,IAEE4B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,UAAU,KACpBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,GAAG,uBACHC,MAAM,QAAQnB,MAAO,CAAEU,MAAO,KAC9BU,KAAK,QACL9C,KAAK,QACLC,MAAOb,KAAKI,MAAMC,MAClBsD,SAAU3D,KAAK4D,aAAahB,KAAK5C,QAPrC,IAQKmC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAWE,MAAO,CAAEU,MAAO,IAAKa,OAAQ,GACtCL,GAAG,uBACHC,MAAM,WACNC,KAAK,WACL9C,KAAK,WACLC,MAAOb,KAAKI,MAAME,SAClBqD,SAAU3D,KAAK4D,aAAahB,KAAK5C,QACjCmC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAEGF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAaK,UAAU,iBACrBN,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQE,MAAO,CAAEU,MAAO,QAAUU,KAAK,SAASM,QAAQ,YAAYC,MAAM,WAA1E,UAEF9B,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ4B,QAAQ,WAAWC,MAAM,WAAU9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,GAAG,aAAT,yBA5FhDC,uGCA/B/C,EAAW,+DAEM4D,cAEnB,SAAAA,EAAYrF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACjBpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMJ,KACDQ,MAAQ,CACXmB,MAAO8C,EAAOxD,MACdR,MAAO,GACPE,QAAS,GACT2E,QAAS,GACTC,SAAU,IAPKtF,mFAYC,IAAAiB,EAAAd,KAQlB,GAPAA,KAAKoF,aAAef,EAAOgB,UAAU,SAAC9D,GACpCT,EAAKL,SAAS,CAAEc,YAGlBvB,KAAKgB,OAASC,IAAMC,YAAYF,SAG1BhB,KAAKI,MAAMmB,MAAO,CACtB,IAAM+D,EAAUC,IAAIC,OAAOnB,EAAOxD,OAClCa,QAAQC,IAAI,kBAAmB2D,EAAQjF,OACvCL,KAAKS,SAAS,CAAEJ,MAAOiF,EAAQjF,aAE/BL,KAAKJ,MAAMiC,QAAQC,KAAK,KAI1Bb,IACGwE,IAAIpE,EAAW,SACd,CACEC,YAAatB,KAAKgB,OAAOO,MACzBmE,QAAS,CAAEC,cAAe,UAAYtB,EAAOxD,SAEhDW,KAAK,SAAAC,GACJC,QAAQC,IAAI,gBAAiBF,GAC7BX,EAAKL,SAAS,CAAE0E,SAAU1D,EAASuD,KAAKY,MAAMC,cAG/C9D,MAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZlB,EAAKL,SAAS,CAAEF,QAAS,+EAM7BP,KAAKgB,OAAOkB,SACZlC,KAAKoF,aAAaU,cAClBpB,EAAY,2CAIDlE,GACXA,EAAEO,iBACF2D,EAAY,MACZ1E,KAAKJ,MAAMiC,QAAQC,KAAK,0CAIbtB,GACXA,EAAEO,iBACFf,KAAKS,SAAS,CAAEyE,QAAS1E,EAAEG,OAAOE,iDAInBL,GAAG,IAAAuF,EAAA/F,KAClBQ,EAAEO,iBAEFf,KAAKoF,aAAef,EAAOgB,UAAU,SAAC9D,GACpCwE,EAAKtF,SAAS,CAAEc,YAGlBvB,KAAKgB,OAASC,IAAMC,YAAYF,SAEhCC,IACGG,KAAKC,EAAW,SACf,CAAE2E,QAAShG,KAAKI,MAAM8E,SACtB,CACEQ,QAAS,CACPpE,YAAatB,KAAKgB,OAAOO,MACzBoE,cAAe,UAAYtB,EAAOxD,SAIvCW,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACZsE,EAAKE,oBACLF,EAAKtF,SAAS,CACZF,QAAS,gCACT2E,QAAS,OAGZnD,MAAM,SAACC,GACN+D,EAAKtF,SAAS,CAAEF,QAAS,6EAKdiD,GAAI,IAAA0C,EAAAlG,KACnBiB,IACGkF,OAAO9E,EAAW,UAAYmC,EAAI,CACjCkC,QAAS,CACPpE,YAAatB,KAAKgB,OAAOO,MACzBoE,cAAe,UAAYtB,EAAOxD,SAGrCW,KAAK,SAAAC,GACJyE,EAAKzF,SAAS,CAAEF,QAAS,8BACzB2F,EAAKD,sBAGNlE,MAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZkE,EAAKzF,SAAS,CAAEF,QAAS,8BACzB2F,EAAKD,uDAIF,IAAAG,EAAApG,KACP,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAA,OAAD,KACEL,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,KACED,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,KACED,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAY6B,MAAM,UAAUuC,aAAW,QACrCrE,EAAAC,EAAAC,cAAA,KAAGI,UAAU,6BAAb,mBADF,IACgEzC,KAAKI,MAAMC,OAE3E8B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAY4B,QAAQ,KAAKC,MAAM,UAAU3B,MAAO,CAAEU,MAAO,OAAQT,UAAW,UAC1EJ,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ6B,MAAM,UAAUwC,QAASzG,KAAK0G,aAAa9D,KAAK5C,OAAxD,aAVR,IAaYmC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAElCF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKsE,aAAa,OAElBxE,EAAAC,EAAAC,cAAA,QAAMK,SAAU1C,KAAK2C,iBAAiBC,KAAK5C,OACzCmC,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAWE,MAAO,CAAEU,MAAO,QACzBQ,GAAG,0BACHC,MAAM,YACNC,KAAK,OACLM,QAAQ,WACRnD,MAAOb,KAAKI,MAAM8E,QAClBvB,SAAU3D,KAAK4D,aAAahB,KAAK5C,SAGrCmC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWzC,KAAKI,MAAMG,SAZrC,KAeA4B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAEXzC,KAAKI,MAAM+E,SAASyB,IAAI,SAAAC,GAEtB,OACE1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0E,SAAA,KACE3E,EAAAC,EAAAC,cAAA,MAAI0E,IAAKF,EAAKrD,IACZrB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAME,MAAO,CAAEC,UAAW,QAAS0E,eAAgB,gBAAiBN,aAAc,KAChFlD,MAAOoD,EAAKb,QACZkB,SAAU,WAAQd,EAAKe,iBAAiBN,EAAKrD,KAC7CS,MAAM,4BArKKG,aCuBpBgD,cA7Bb,SAAAA,EAAYxH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,IACjBvH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsH,GAAAjH,KAAAH,KAAMJ,KACDQ,MAAQ,CACXmB,MAAO,MAHQ1B,mFAOC,IAAAiB,EAAAd,KAClBA,KAAKoF,aAAef,EAAOgB,UAAU,SAAC9D,GACpCT,EAAKL,SAAS,CAAEc,2DAKlBvB,KAAKoF,aAAaU,+CAKlB,OACE3D,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQmD,SAAUC,2BAChBnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInE,UAAWoE,IACjCvF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOE,KAAK,YAAYnE,UAAWqE,IACnCxF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOE,KAAK,SAASnE,UAAWsC,YAzBtBxB,aCIEwD,QACW,cAA7BrD,OAAOsD,SAASC,UAEe,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,KAAK,SAAAgH,GACjCA,EAAaC","file":"static/js/main.edccb0fd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      message: ''\r\n    }\r\n  }\r\n\r\n  /* handleEmailChange(e){\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  handlePasswordChange(e){\r\n    this.setState({ password: e.target.value });\r\n  } */\r\n\r\n  // Same as above commented statements but more suitable\r\n  // Handling all inputs\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // Handling register form\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.source = axios.CancelToken.source(); // Cancel active request\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    let API_ROOT = \"http://ec2-13-53-32-89.eu-north-1.compute.amazonaws.com:3000\";\r\n    \r\n    axios.post(API_ROOT + \"/register\", userData, { cancelToken: this.source.token })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          this.props.history.push(\"/register\");\r\n          this.setState({\r\n            message: \"You have been registered successfully. Please login now\",\r\n            email: \"\", // Clearing an input value after form submit\r\n            password: \"\" // Clearing an input value after form submit\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (!axios.isCancel(error)) {\r\n          this.setState({ message: \"Something went wrong !!!!\" });\r\n        }\r\n      });\r\n  }\r\n\r\n  // Unmount mounted data\r\n  componentWillUnmount() {\r\n    if (this.source) {\r\n      this.source.cancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state);\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Helmet>\r\n          <title>Register</title>\r\n        </Helmet><br/>\r\n\r\n        <div className=\"login__form\">\r\n          <form onSubmit={this.handleFormSubmit.bind(this)} noValidate autoComplete=\"off\">\r\n            <Card style={{ width: '300px' }} >\r\n              <i className=\"material-icons accountman\" style={{ fontSize: '100px' }}>account_circle</i>\r\n              <CardHeader title=\"SIGN-UP\" />\r\n              <CardContent>\r\n                <div className=\"message\">{this.state.message}</div> {/* success/error messsage */}\r\n                <Typography component=\"p\">\r\n                  <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Email\" style={{ width: 250 }}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange.bind(this)}\r\n                  /> <br /><br />\r\n                  <TextField style={{ width: 250, margin: 0 }}\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange.bind(this)}\r\n                  /> <br/><br/>\r\n                </Typography>\r\n              </CardContent><br/><br/>\r\n              <CardActions className=\"login__button\">\r\n                <Button style={{ width: '100%' }} type=\"submit\" variant=\"contained\" color=\"primary\">REGISTER</Button>\r\n              </CardActions>\r\n              <p>Already have an account? <Button variant=\"outlined\" color=\"primary\"><Link to=\"/\">Login</Link></Button></p>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * Simple token store\r\n */\r\n\r\nexport const token$ = new BehaviorSubject(window.localStorage.getItem('token') ||\r\n  null);\r\n\r\nexport function updateToken(newToken) {\r\n  if (!newToken) {\r\n    window.localStorage.removeItem('token');\r\n  } else {\r\n    window.localStorage.setItem('token', newToken);\r\n  }\r\n\r\n  token$.next(newToken);\r\n}\r\n\r\n\r\n\r\n// import {BehaviorSubject} from \"rxjs\";\r\n\r\n// export const token$ = new BehaviorSubject(window.localStorage.getItem(\"token\"));\r\n\r\n// export function updateToken(newToken){\r\n    \r\n//     if(newToken === null){\r\n//         window.localStorage.removeItem(\"token\");\r\n//     }else{\r\n//         token$.next(newToken);\r\n//     }\r\n// }\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport axios from 'axios'\r\nimport { updateToken } from \"../store\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      message: ''\r\n    }\r\n  }\r\n\r\n  // Handling all inputs\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  // Handling login form\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.source = axios.CancelToken.source(); // Cancel active request\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\n\r\n    let API_ROOT = \"http://ec2-13-53-32-89.eu-north-1.compute.amazonaws.com:3000\";\r\n\r\n    axios.post(API_ROOT + \"/auth\", userData, { cancelToken: this.source.token })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n          updateToken(response.data.token); // Token\r\n          window.localStorage.setItem(\"token\", response.data.token)  // Saving token in localStorage\r\n          this.props.history.push(\"/todos\");\r\n          //this.setState({ message: \"Login successfully\" });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (!axios.isCancel(error)) {\r\n          this.setState({ message: \"Something went wrong !!!!\" });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // Unmount mounted data\r\n  componentWillUnmount() {\r\n    if (this.source) {\r\n      this.source.cancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.state);\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n\r\n        <Helmet>\r\n          <title>Login</title>\r\n        </Helmet><br />\r\n\r\n        <div className=\"login__form\">\r\n          <form onSubmit={this.handleFormSubmit.bind(this)} noValidate autoComplete=\"off\">\r\n            <Card style={{ width: '300px' }} >\r\n              <i className=\"material-icons accountman\" style={{ fontSize: '100px' }}>account_circle</i>\r\n              <CardHeader title=\"SIGN-IN\" />\r\n              <CardContent>\r\n                <div className=\"message\">{this.state.message}</div> {/* success/error messsage */}\r\n                <Typography component=\"p\">\r\n                  <TextField\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Email\" style={{ width: 250 }}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange.bind(this)}\r\n                  /> <br /><br />\r\n                  <TextField style={{ width: 250, margin: 0 }}\r\n                    id=\"outlined-email-input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange.bind(this)}\r\n                  /><br/><br/>\r\n                </Typography>\r\n              </CardContent><br/><br/>\r\n              <CardActions className=\"login__button\">\r\n                <Button style={{ width: '100%' }} type=\"submit\" variant=\"contained\" color=\"primary\">LOGIN</Button>\r\n              </CardActions>\r\n              <p>Don't have an Account? <Button variant=\"outlined\" color=\"primary\"><Link to=\"/register\">Register</Link></Button></p>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport jwt from 'jsonwebtoken'\r\nimport { token$, updateToken } from '../store'\r\nimport axios from 'axios'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nlet API_ROOT = \"http://ec2-13-53-32-89.eu-north-1.compute.amazonaws.com:3000\";\r\n\r\nexport default class Todos extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: token$.value,\r\n      email: '',\r\n      message: '',\r\n      newtodo: '',\r\n      todolist: []\r\n    }\r\n  }\r\n\r\n  // Fetch the data from An External API  \r\n  componentDidMount() {\r\n    this.subscription = token$.subscribe((token) => {\r\n      this.setState({ token });\r\n    });\r\n\r\n    this.source = axios.CancelToken.source(); // Cancel active request\r\n\r\n    // Getting profile (email) information\r\n    if (!!this.state.token) {\r\n      const decoded = jwt.decode(token$.value);\r\n      console.log(\"Decoded email: \", decoded.email);\r\n      this.setState({ email: decoded.email })\r\n    } else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    // READ/LIST: Fetching todo list\r\n    axios\r\n      .get(API_ROOT + \"/todos\",\r\n        {\r\n          cancelToken: this.source.token,\r\n          headers: { Authorization: \"Bearer \" + token$.value, }\r\n        })\r\n      .then(response => {\r\n        console.log(\"Response is: \", response);\r\n        this.setState({ todolist: response.data.todos.reverse() })\r\n        //console.log(\"Todo list contains: \", this.state.todolist[0]);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ message: \"Something went wrong !!!!\" });\r\n      })\r\n  }\r\n\r\n  // Unmount mounted data\r\n  componentWillUnmount() {\r\n    this.source.cancel(); // Cancel active request\r\n    this.subscription.unsubscribe(); // cancel active subscription\r\n    updateToken(null);\r\n  }\r\n\r\n  // Handling logout button\r\n  handleLogout(e) {\r\n    e.preventDefault();\r\n    updateToken(null);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  // Handling input button\r\n  handleChange(e) {\r\n    e.preventDefault();\r\n    this.setState({ newtodo: e.target.value });\r\n  }\r\n\r\n  // CREATE: Handling creating new todo form\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.subscription = token$.subscribe((token) => {\r\n      this.setState({ token });\r\n    });\r\n\r\n    this.source = axios.CancelToken.source();\r\n\r\n    axios\r\n      .post(API_ROOT + \"/todos\",\r\n        { content: this.state.newtodo },\r\n        {\r\n          headers: {\r\n            cancelToken: this.source.token,\r\n            Authorization: \"Bearer \" + token$.value\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.componentDidMount() // This helps to see todo list added after adding \r\n        this.setState({\r\n          message: \"Created new todo successfully\",\r\n          newtodo: \"\", // Clearing an input value after form submit\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ message: \"Please fill in the field !!!!\" });\r\n      });\r\n  }\r\n\r\n  // DELETE: Handling delete todo function\r\n  handleDeleteTodo(id) {\r\n    axios\r\n      .delete(API_ROOT + \"/todos/\" + id, {\r\n        headers: {\r\n          cancelToken: this.source.token,\r\n          Authorization: \"Bearer \" + token$.value\r\n        },\r\n      })\r\n      .then(response => {\r\n        this.setState({ message: \"Deleted todo successfully\" });\r\n        this.componentDidMount() //Refresh the page with todo list\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.setState({ message: \"Something went wrong !!!!\" });\r\n        this.componentDidMount() //Refresh the page with todo list\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Todos</title>\r\n        </Helmet>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" aria-label=\"Menu\" >\r\n              <i className=\"material-icons accountman\">account_circle </i> {this.state.email}\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={{ width: '100%', textAlign: 'right' }}  >\r\n              <Button color=\"inherit\" onClick={this.handleLogout.bind(this)} >Logout</Button>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar> <br /><br /><br /><br /><br />\r\n\r\n        <div className=\"form\">\r\n          <div marginBottom='5px'>\r\n          {/* Creating new todos */}\r\n          <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n            <TextField style={{ width: '100%' }}\r\n              id=\"outlined-Add-Todo-input\"\r\n              label=\"Add Todos\"\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              value={this.state.newtodo}\r\n              onChange={this.handleChange.bind(this)}\r\n            />\r\n          </form>\r\n          <div className=\"message\">{this.state.message}</div> {/* success/error messsage */}\r\n          </div>\r\n          {/* Listing todos */}\r\n          <div className=\"todo__form\">\r\n            {\r\n              this.state.todolist.map(todo => {\r\n                //console.log(\"Single todo is: \", todo);\r\n                return (\r\n                  <>\r\n                    <ul key={todo.id} >\r\n                      <Chip style={{ textAlign: 'right', justifyContent: \"space-between\", marginBottom: '0' }}\r\n                        label={todo.content}\r\n                        onDelete={() => { this.handleDeleteTodo(todo.id) }}\r\n                        color=\"secondary\"\r\n                      />\r\n                    </ul>\r\n                  </>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport register from './components/register';\r\nimport login from './components/login';\r\nimport todos from './components/todos';\r\nimport { token$ } from './store';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.subscription = token$.subscribe((token) => {\r\n      this.setState({ token });\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Route exact path=\"/\" component={login} />\r\n        <Route path=\"/register\" component={register} />\r\n        <Route path=\"/todos\" component={todos} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}